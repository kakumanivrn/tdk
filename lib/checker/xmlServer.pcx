# -*- tcl -*- xmlServer.pcx --
#
#	This file implements the TclPro Checker extension for the XML
#	Server API.
#
# Copyright (c) 1999-2000 Ajuba Solutions
# All rights reserved.
# 
# RCS: @(#) $Id: xmlServer.pcx,v 1.3 2000/05/30 22:28:59 wart Exp $

# ### ######### ###########################
## Requisites

package require pcx          ; # PCX API

# ### ######### ###########################
## Tcl core version dependencies of the package this checker is for.

pcx::register xmlServer
pcx::tcldep   1.0 needs tcl

# ### ######### ###########################

# ### ######### ###########################
## Package specific message types and their human-readable
## translations.

## None

# ### ######### ###########################
# scanCmdsX.X --
# Define the set of commands that need to be recuresed into when 
# generating a list of user defiend procs, namespace and Class 
# contexts and procedure name resolutions info.

## None

# ### ######### ###########################
# Define the set of command-specific checkers used by this package.

pcx::check 1.0 std getenv	{checkSimpleArgs 0 0 checkWord}
pcx::check 1.0 std getpost	{checkSimpleArgs 0 1 checkWord}
pcx::check 1.0 std respond	{checkSimpleArgs 2 3 {{checkOption {
    {status		{checkSimpleArgs 1 1 {checkWholeNum}}}
    {header		{checkSimpleArgs 1 1 {checkWord}}}
    {data		{checkSimpleArgs 1 2 {checkWord}}}
    {file		{checkSimpleArgs 1 1 {checkFileName}}}
} {}}}}
pcx::check 1.0 std redirect	{checkSimpleArgs 2 2 {{
    checkSwitches 0 {-external {} -internal {}} {
	checkSimpleArgs 1 1 checkWord}}
    }
}
pcx::check 1.0 std log		{checkSimpleArgs 2 2 {{
    checkSwitches 0 {
	-emerg {} 
	-alert {} 
	-crit {}
	-error {}
	-warn {}
	-notice {}
	-info {}
	-debug {}} {checkSimpleArgs 1 1 checkWord}}
    }
}

# ### ######### ###########################

namespace eval xmlServer {
    # ### ######### ###########################
    # aliasCmds --
    # Define the set of commands that are created as aliases of the
    # corresponding xmld::* commands.
    
    variable aliasCmds {
	getenv getpost respond redirect log
    }
}

# ### ######### ###########################
## Initialization

## This package provides its own initialization command to handle
## special definitions. For the common parts it uses the standard
## initialization.

proc ::xmlServer::init {ver} {
    pcx::init xmlServer $ver

    # Add aliased checkers.
    # Alias the standard xmld::* commands so the namespace qualifier 
    # appears in the comand name.

    variable aliasCmds
    set aliases {}
    foreach name $aliasCmds {
	if {[pcx::topDefinition $name] != {}} {
	    lappend aliases xmld::$name [pcx::topDefinition $name]
	}
    }
    pcx::checkers $aliases
    return
}

# ### ######### ###########################
pcx::complete
